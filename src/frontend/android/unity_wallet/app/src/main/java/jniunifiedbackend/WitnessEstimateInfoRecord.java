// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from libunity.djinni

package jniunifiedbackend;

public final class WitnessEstimateInfoRecord implements android.os.Parcelable {


    /*package*/ final long mNetworkWeight;

    /*package*/ final long mWeight;

    /*package*/ final long mParts;

    /*package*/ final double mEstimatedWitnessProbability;

    /*package*/ final double mEstimatedBlocksPerDay;

    /*package*/ final long mEstimatedDailyEarnings;

    /*package*/ final long mEstimatedLifetimeEarnings;

    public WitnessEstimateInfoRecord(
            long networkWeight,
            long weight,
            long parts,
            double estimatedWitnessProbability,
            double estimatedBlocksPerDay,
            long estimatedDailyEarnings,
            long estimatedLifetimeEarnings) {
        this.mNetworkWeight = networkWeight;
        this.mWeight = weight;
        this.mParts = parts;
        this.mEstimatedWitnessProbability = estimatedWitnessProbability;
        this.mEstimatedBlocksPerDay = estimatedBlocksPerDay;
        this.mEstimatedDailyEarnings = estimatedDailyEarnings;
        this.mEstimatedLifetimeEarnings = estimatedLifetimeEarnings;
    }

    /** Current network weight */
    public long getNetworkWeight() {
        return mNetworkWeight;
    }

    /** Weight of resulting witness account */
    public long getWeight() {
        return mWeight;
    }

    /** How many parts this weight will be split into */
    public long getParts() {
        return mParts;
    }

    /** The per block probability of resulting account witnesing */
    public double getEstimatedWitnessProbability() {
        return mEstimatedWitnessProbability;
    }

    /** The estimated number of blocks the resulting account should find per day */
    public double getEstimatedBlocksPerDay() {
        return mEstimatedBlocksPerDay;
    }

    /** The estimated earnings the account should make per day */
    public long getEstimatedDailyEarnings() {
        return mEstimatedDailyEarnings;
    }

    /** The estimated earnings the account should make over its entire lifetime */
    public long getEstimatedLifetimeEarnings() {
        return mEstimatedLifetimeEarnings;
    }

    @Override
    public String toString() {
        return "WitnessEstimateInfoRecord{" +
                "mNetworkWeight=" + mNetworkWeight +
                "," + "mWeight=" + mWeight +
                "," + "mParts=" + mParts +
                "," + "mEstimatedWitnessProbability=" + mEstimatedWitnessProbability +
                "," + "mEstimatedBlocksPerDay=" + mEstimatedBlocksPerDay +
                "," + "mEstimatedDailyEarnings=" + mEstimatedDailyEarnings +
                "," + "mEstimatedLifetimeEarnings=" + mEstimatedLifetimeEarnings +
        "}";
    }


    public static final android.os.Parcelable.Creator<WitnessEstimateInfoRecord> CREATOR
        = new android.os.Parcelable.Creator<WitnessEstimateInfoRecord>() {
        @Override
        public WitnessEstimateInfoRecord createFromParcel(android.os.Parcel in) {
            return new WitnessEstimateInfoRecord(in);
        }

        @Override
        public WitnessEstimateInfoRecord[] newArray(int size) {
            return new WitnessEstimateInfoRecord[size];
        }
    };

    public WitnessEstimateInfoRecord(android.os.Parcel in) {
        this.mNetworkWeight = in.readLong();
        this.mWeight = in.readLong();
        this.mParts = in.readLong();
        this.mEstimatedWitnessProbability = in.readDouble();
        this.mEstimatedBlocksPerDay = in.readDouble();
        this.mEstimatedDailyEarnings = in.readLong();
        this.mEstimatedLifetimeEarnings = in.readLong();
    }

    @Override
    public int describeContents() {
        return 0;
    }

    @Override
    public void writeToParcel(android.os.Parcel out, int flags) {
        out.writeLong(this.mNetworkWeight);
        out.writeLong(this.mWeight);
        out.writeLong(this.mParts);
        out.writeDouble(this.mEstimatedWitnessProbability);
        out.writeDouble(this.mEstimatedBlocksPerDay);
        out.writeLong(this.mEstimatedDailyEarnings);
        out.writeLong(this.mEstimatedLifetimeEarnings);
    }

}
