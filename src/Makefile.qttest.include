# Copyright (c) 2013-2016 The Bitcoin Core developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.
#
# File contains modifications by: The Gulden developers
# All modifications:
# Copyright (c) 2016-2018 The Gulden developers
# Authored by: Malcolm MacLeod (mmacleod@gmx.com)
# Distributed under the GULDEN software license, see the accompanying
# file COPYING

bin_PROGRAMS += qt/test/test_Gulden
TESTS += qt/test/test_Gulden

TEST_QT_MOC_CPP = \
  qt/test/moc_compattests.cpp \
  qt/test/moc_rpcnestedtests.cpp \
  qt/test/moc_uritests.cpp

if ENABLE_WALLET
TEST_QT_MOC_CPP += \
  qt/test/moc_paymentservertests.cpp \
  qt/test/moc_wallettests.cpp
endif

TEST_QT_H = \
  qt/test/compattests.h \
  qt/test/rpcnestedtests.h \
  qt/test/uritests.h \
  qt/test/paymentrequestdata.h \
  qt/test/paymentservertests.h \
  qt/test/wallettests.h

TEST_GULDEN_CPP = \
  test/test.cpp \
  test/testutil.cpp

TEST_GULDEN_H = \
  test/test.h \
  test/testutil.h

qt_test_test_Gulden_CPPFLAGS = $(AM_CPPFLAGS) $(COMMON_INCLUDES) $(GULDEN_QT_INCLUDES) \
  $(QT_INCLUDES) $(QT_TEST_INCLUDES) $(PROTOBUF_CFLAGS) $(QWT_CFLAGS)

qt_test_test_Gulden_SOURCES = \
  qt/test/compattests.cpp \
  qt/test/rpcnestedtests.cpp \
  qt/test/test_main.cpp \
  qt/test/uritests.cpp \
  $(TEST_QT_H) \
  $(TEST_GULDEN_CPP) \
  $(TEST_GULDEN_H)
if ENABLE_WALLET
qt_test_test_Gulden_SOURCES += \
  qt/test/paymentservertests.cpp \
  qt/test/wallettests.cpp \
  wallet/test/wallet_test_fixture.cpp
endif

nodist_qt_test_test_Gulden_SOURCES = $(TEST_QT_MOC_CPP)

qt_test_test_Gulden_LDADD = $(LIBQT) $(LIB_SERVER) $(LIB_NODE)
if ENABLE_WALLET
qt_test_test_Gulden_LDADD += $(LIB_WALLET)
endif
if ENABLE_ZMQ
qt_test_test_Gulden_LDADD += $(LIB_ZMQ) $(ZMQ_LIBS)
endif
qt_test_test_Gulden_LDADD += $(LIB_CLI) $(LIB_COMMON) $(LIB_GENERIC) $(LIB_UTIL) $(LIB_CONSENSUS) $(LIB_CRYPTO_ALL) $(LIBUNIVALUE) $(LIBLEVELDB) \
  $(LIBMEMENV) $(BOOST_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) $(QT_LIBS) $(QWT_LIBS)\
  $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTOPP_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \
  $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)


qt_test_test_Gulden_LDADD += $(LIBQT) $(LIB_SERVER) $(LIB_NODE)
if ENABLE_WALLET
qt_test_test_Gulden_LDADD += $(LIB_WALLET)
endif
if ENABLE_ZMQ
qt_test_test_Gulden_LDADD += $(LIB_ZMQ) $(ZMQ_LIBS)
endif
qt_test_test_Gulden_LDADD += $(LIB_CLI) $(LIB_COMMON) $(LIB_GENERIC) $(LIB_UTIL) $(LIB_CONSENSUS) $(LIB_CRYPTO_ALL) $(LIBUNIVALUE) $(LIBLEVELDB) \
  $(LIBMEMENV) $(BOOST_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) $(QT_LIBS) $(QWT_LIBS)\
  $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTOPP_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \
  $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)




qt_test_test_Gulden_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
qt_test_test_Gulden_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)

CLEAN_GULDEN_QT_TEST = $(TEST_QT_MOC_CPP) qt/test/*.gcda qt/test/*.gcno

CLEANFILES += $(CLEAN_GULDEN_QT_TEST)

test_Gulden_qt : qt/test/test_Gulden$(EXEEXT)

test_Gulden_qt_check : qt/test/test_Gulden$(EXEEXT) FORCE
	$(MAKE) check-TESTS TESTS=$^

test_Gulden_qt_clean: FORCE
	rm -f $(CLEAN_GULDEN_QT_TEST) $(qt_test_test_Gulden_OBJECTS)
