qrcode_record = record {
    width: i32;
    pixel_data: binary;
}

# This interface will be implemented in C++ and can be called from any language.
gulden_unified_backend = interface +c {

    #Methods
    static InitUnityLib(data_dir : string, signals : gulden_unified_frontend): i32;

    # Generate a QR code for a string, QR code will be as close to width_hint as possible when applying simple scaling.
    static QRImageFromString(qr_string : string, width_hint : i32): qrcode_record;

    # Get a receive address from the wallet
    static GetReceiveAddress(): string;

    # Interface constants
    const version: i32 = 1;
}

# This interface will be implemented in Java and ObjC and can be called from C++.
gulden_unified_frontend = interface +j +o {
    notifySPVProgress(start_height : i32, progess_height : i32, expected_height : i32): bool;
}
