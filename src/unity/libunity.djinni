# Copyright (c) 2018 The Gulden developers
# Authored by: Malcolm MacLeod (mmacleod@webmail.co.za)
# Distributed under the GULDEN software license, see the accompanying
# file COPYING

qrcode_record = record {
    width: i32;
    pixel_data: binary;
}

balance_record = record {
    availableIncludingLocked: i64;
    availableExcludingLocked: i64;
    availableLocked: i64;
    unconfirmedIncludingLocked: i64;
    unconfirmedExcludingLocked: i64;
    unconfirmedLocked: i64;
    immatureIncludingLocked: i64;
    immatureExcludingLocked: i64;
    immatureLocked: i64;
    totalLocked: i64;
}

uri_record = record {
    scheme : string;
    path : string;
    items: map<string, string>;
}

uri_recipient = record {
    valid : bool;
    address : string;
    label : string;
    amount : string;
} deriving(parcelable)

transaction_type = enum {
    send;
    receive;
}

transaction_record = record {
    type : transaction_type;
    amount : i64;
    address : string;
    label : string;
    timestamp : i64;
} deriving(parcelable)

address_record = record {
    address : string;
    purpose : string;
    name : string;
} deriving(parcelable)

# This interface will be implemented in C++ and can be called from any language.
gulden_unified_backend = interface +c {

    # Start the library
    static InitUnityLib(data_dir : string, signals : gulden_unified_frontend): i32;

    # Stop the library
    static TerminateUnityLib();

    # Generate a QR code for a string, QR code will be as close to width_hint as possible when applying simple scaling.
    static QRImageFromString(qr_string : string, width_hint : i32): qrcode_record;

    # Get a receive address from the wallet
    static GetReceiveAddress(): string;

    # Get a receive address from the wallet
    static GetRecoveryPhrase(): string;

    # Check if text/address is something we are capable of sending money too
    static IsValidRecipient(request : uri_record): uri_recipient;

    # Attempt to pay a recipient
    static performPaymentToRecipient(request : uri_recipient): bool;

    # Get list of all transactions wallet has been involved in
    static getTransactionHistory() : list<transaction_record>;

    # Get list of all address book entries
    static getAddressBookRecords() : list<address_record>;

    # Add a record to the address book
    static addAddressBookRecord(address : address_record);

    # Delete a record from the address book
    static deleteAddressBookRecord(address : address_record);

    # Interface constants
    const version: i32 = 1;
}

# This interface will be implemented in Java and ObjC and can be called from C++.
gulden_unified_frontend = interface +j +o {
    notifySPVProgress(start_height : i32, progess_height : i32, expected_height : i32): bool;
    notifyBalanceChange(new_balance : balance_record): bool;
    notifyNewTransaction(new_transaction : transaction_record): bool;
    notifyShutdown(): bool;
    notifyCoreReady(): bool;
}
