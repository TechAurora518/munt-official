// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from libunity.djinni

#pragma once

#include "djinni_support.hpp"
#include "peer_record.hpp"

namespace djinni_generated {

class NativePeerRecord final {
public:
    using CppType = ::PeerRecord;
    using JniType = jobject;

    using Boxed = NativePeerRecord;

    ~NativePeerRecord();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    NativePeerRecord();
    friend ::djinni::JniClass<NativePeerRecord>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("com/gulden/jniunifiedbackend/PeerRecord") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(Ljava/lang/String;Ljava/lang/String;IILjava/lang/String;J)V") };
    const jfieldID field_mIp { ::djinni::jniGetFieldID(clazz.get(), "mIp", "Ljava/lang/String;") };
    const jfieldID field_mHostname { ::djinni::jniGetFieldID(clazz.get(), "mHostname", "Ljava/lang/String;") };
    const jfieldID field_mHeight { ::djinni::jniGetFieldID(clazz.get(), "mHeight", "I") };
    const jfieldID field_mLatency { ::djinni::jniGetFieldID(clazz.get(), "mLatency", "I") };
    const jfieldID field_mUserAgent { ::djinni::jniGetFieldID(clazz.get(), "mUserAgent", "Ljava/lang/String;") };
    const jfieldID field_mProtocol { ::djinni::jniGetFieldID(clazz.get(), "mProtocol", "J") };
};

}  // namespace djinni_generated
