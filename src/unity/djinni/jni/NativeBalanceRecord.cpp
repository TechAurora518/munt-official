// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from libunity.djinni

#include "NativeBalanceRecord.hpp"  // my header
#include "Marshal.hpp"

namespace djinni_generated {

NativeBalanceRecord::NativeBalanceRecord() = default;

NativeBalanceRecord::~NativeBalanceRecord() = default;

auto NativeBalanceRecord::fromCpp(JNIEnv* jniEnv, const CppType& c) -> ::djinni::LocalRef<JniType> {
    const auto& data = ::djinni::JniClass<NativeBalanceRecord>::get();
    auto r = ::djinni::LocalRef<JniType>{jniEnv->NewObject(data.clazz.get(), data.jconstructor,
                                                           ::djinni::get(::djinni::I64::fromCpp(jniEnv, c.availableIncludingLocked)),
                                                           ::djinni::get(::djinni::I64::fromCpp(jniEnv, c.availableExcludingLocked)),
                                                           ::djinni::get(::djinni::I64::fromCpp(jniEnv, c.availableLocked)),
                                                           ::djinni::get(::djinni::I64::fromCpp(jniEnv, c.unconfirmedIncludingLocked)),
                                                           ::djinni::get(::djinni::I64::fromCpp(jniEnv, c.unconfirmedExcludingLocked)),
                                                           ::djinni::get(::djinni::I64::fromCpp(jniEnv, c.unconfirmedLocked)),
                                                           ::djinni::get(::djinni::I64::fromCpp(jniEnv, c.immatureIncludingLocked)),
                                                           ::djinni::get(::djinni::I64::fromCpp(jniEnv, c.immatureExcludingLocked)),
                                                           ::djinni::get(::djinni::I64::fromCpp(jniEnv, c.immatureLocked)),
                                                           ::djinni::get(::djinni::I64::fromCpp(jniEnv, c.totalLocked)))};
    ::djinni::jniExceptionCheck(jniEnv);
    return r;
}

auto NativeBalanceRecord::toCpp(JNIEnv* jniEnv, JniType j) -> CppType {
    ::djinni::JniLocalScope jscope(jniEnv, 11);
    assert(j != nullptr);
    const auto& data = ::djinni::JniClass<NativeBalanceRecord>::get();
    return {::djinni::I64::toCpp(jniEnv, jniEnv->GetLongField(j, data.field_mAvailableIncludingLocked)),
            ::djinni::I64::toCpp(jniEnv, jniEnv->GetLongField(j, data.field_mAvailableExcludingLocked)),
            ::djinni::I64::toCpp(jniEnv, jniEnv->GetLongField(j, data.field_mAvailableLocked)),
            ::djinni::I64::toCpp(jniEnv, jniEnv->GetLongField(j, data.field_mUnconfirmedIncludingLocked)),
            ::djinni::I64::toCpp(jniEnv, jniEnv->GetLongField(j, data.field_mUnconfirmedExcludingLocked)),
            ::djinni::I64::toCpp(jniEnv, jniEnv->GetLongField(j, data.field_mUnconfirmedLocked)),
            ::djinni::I64::toCpp(jniEnv, jniEnv->GetLongField(j, data.field_mImmatureIncludingLocked)),
            ::djinni::I64::toCpp(jniEnv, jniEnv->GetLongField(j, data.field_mImmatureExcludingLocked)),
            ::djinni::I64::toCpp(jniEnv, jniEnv->GetLongField(j, data.field_mImmatureLocked)),
            ::djinni::I64::toCpp(jniEnv, jniEnv->GetLongField(j, data.field_mTotalLocked))};
}

}  // namespace djinni_generated
