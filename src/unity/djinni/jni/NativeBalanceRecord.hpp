// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from libunity.djinni

#pragma once

#include "balance_record.hpp"
#include "djinni_support.hpp"

namespace djinni_generated {

class NativeBalanceRecord final {
public:
    using CppType = ::BalanceRecord;
    using JniType = jobject;

    using Boxed = NativeBalanceRecord;

    ~NativeBalanceRecord();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    NativeBalanceRecord();
    friend ::djinni::JniClass<NativeBalanceRecord>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("com/gulden/jniunifiedbackend/BalanceRecord") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(JJJJJJJJJJ)V") };
    const jfieldID field_mAvailableIncludingLocked { ::djinni::jniGetFieldID(clazz.get(), "mAvailableIncludingLocked", "J") };
    const jfieldID field_mAvailableExcludingLocked { ::djinni::jniGetFieldID(clazz.get(), "mAvailableExcludingLocked", "J") };
    const jfieldID field_mAvailableLocked { ::djinni::jniGetFieldID(clazz.get(), "mAvailableLocked", "J") };
    const jfieldID field_mUnconfirmedIncludingLocked { ::djinni::jniGetFieldID(clazz.get(), "mUnconfirmedIncludingLocked", "J") };
    const jfieldID field_mUnconfirmedExcludingLocked { ::djinni::jniGetFieldID(clazz.get(), "mUnconfirmedExcludingLocked", "J") };
    const jfieldID field_mUnconfirmedLocked { ::djinni::jniGetFieldID(clazz.get(), "mUnconfirmedLocked", "J") };
    const jfieldID field_mImmatureIncludingLocked { ::djinni::jniGetFieldID(clazz.get(), "mImmatureIncludingLocked", "J") };
    const jfieldID field_mImmatureExcludingLocked { ::djinni::jniGetFieldID(clazz.get(), "mImmatureExcludingLocked", "J") };
    const jfieldID field_mImmatureLocked { ::djinni::jniGetFieldID(clazz.get(), "mImmatureLocked", "J") };
    const jfieldID field_mTotalLocked { ::djinni::jniGetFieldID(clazz.get(), "mTotalLocked", "J") };
};

}  // namespace djinni_generated
