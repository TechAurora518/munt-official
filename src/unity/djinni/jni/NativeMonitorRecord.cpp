// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from libunity.djinni

#include "NativeMonitorRecord.hpp"  // my header
#include "Marshal.hpp"

namespace djinni_generated {

NativeMonitorRecord::NativeMonitorRecord() = default;

NativeMonitorRecord::~NativeMonitorRecord() = default;

auto NativeMonitorRecord::fromCpp(JNIEnv* jniEnv, const CppType& c) -> ::djinni::LocalRef<JniType> {
    const auto& data = ::djinni::JniClass<NativeMonitorRecord>::get();
    auto r = ::djinni::LocalRef<JniType>{jniEnv->NewObject(data.clazz.get(), data.jconstructor,
                                                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c.partialHeight)),
                                                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c.partialOffset)),
                                                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c.prunedHeight)),
                                                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c.processedSPVHeight)),
                                                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c.probableHeight)))};
    ::djinni::jniExceptionCheck(jniEnv);
    return r;
}

auto NativeMonitorRecord::toCpp(JNIEnv* jniEnv, JniType j) -> CppType {
    ::djinni::JniLocalScope jscope(jniEnv, 6);
    assert(j != nullptr);
    const auto& data = ::djinni::JniClass<NativeMonitorRecord>::get();
    return {::djinni::I32::toCpp(jniEnv, jniEnv->GetIntField(j, data.field_mPartialHeight)),
            ::djinni::I32::toCpp(jniEnv, jniEnv->GetIntField(j, data.field_mPartialOffset)),
            ::djinni::I32::toCpp(jniEnv, jniEnv->GetIntField(j, data.field_mPrunedHeight)),
            ::djinni::I32::toCpp(jniEnv, jniEnv->GetIntField(j, data.field_mProcessedSPVHeight)),
            ::djinni::I32::toCpp(jniEnv, jniEnv->GetIntField(j, data.field_mProbableHeight))};
}

}  // namespace djinni_generated
