// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from libunity.djinni

#import "DBIAccountsController+Private.h"
#import "DBIAccountsController.h"
#import "DBAccountRecord+Private.h"
#import "DBIAccountsListener+Private.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface DBIAccountsController ()

- (id)initWithCpp:(const std::shared_ptr<::IAccountsController>&)cppRef;

@end

@implementation DBIAccountsController {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::IAccountsController>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::IAccountsController>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

+ (void)setListener:(nullable id<DBIAccountsListener>)accountslistener {
    try {
        ::IAccountsController::setListener(::djinni_generated::IAccountsListener::toCpp(accountslistener));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

+ (BOOL)setActiveAccount:(nonnull NSString *)accountUUID {
    try {
        auto objcpp_result_ = ::IAccountsController::setActiveAccount(::djinni::String::toCpp(accountUUID));
        return ::djinni::Bool::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

+ (BOOL)deleteAccount:(nonnull NSString *)accountUUID {
    try {
        auto objcpp_result_ = ::IAccountsController::deleteAccount(::djinni::String::toCpp(accountUUID));
        return ::djinni::Bool::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

+ (nonnull NSString *)createAccount:(nonnull NSString *)accountName
                        accountType:(nonnull NSString *)accountType {
    try {
        auto objcpp_result_ = ::IAccountsController::createAccount(::djinni::String::toCpp(accountName),
                                                                   ::djinni::String::toCpp(accountType));
        return ::djinni::String::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

+ (BOOL)purgeAccount:(nonnull NSString *)accountUUID {
    try {
        auto objcpp_result_ = ::IAccountsController::purgeAccount(::djinni::String::toCpp(accountUUID));
        return ::djinni::Bool::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

+ (nonnull NSArray<DBAccountRecord *> *)listAccounts {
    try {
        auto objcpp_result_ = ::IAccountsController::listAccounts();
        return ::djinni::List<::djinni_generated::AccountRecord>::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto IAccountsController::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto IAccountsController::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<DBIAccountsController>(cpp);
}

}  // namespace djinni_generated

@end
