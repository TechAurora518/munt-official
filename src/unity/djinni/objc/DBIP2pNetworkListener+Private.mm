// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from libunity.djinni

#import "DBIP2pNetworkListener+Private.h"
#import "DBIP2pNetworkListener.h"
#import "DJIMarshal+Private.h"
#import "DJIObjcWrapperCache+Private.h"
#include <stdexcept>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

namespace djinni_generated {

class IP2pNetworkListener::ObjcProxy final
: public ::IP2pNetworkListener
, private ::djinni::ObjcProxyBase<ObjcType>
{
    friend class ::djinni_generated::IP2pNetworkListener;
public:
    using ObjcProxyBase::ObjcProxyBase;
    void onNetworkEnabled() override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() onNetworkEnabled];
        }
    }
    void onNetworkDisabled() override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() onNetworkDisabled];
        }
    }
    void onConnectionCountChanged(int32_t c_numConnections) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() onConnectionCountChanged:(::djinni::I32::fromCpp(c_numConnections))];
        }
    }
    void onBytesChanged(int32_t c_totalRecv, int32_t c_totalSent) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() onBytesChanged:(::djinni::I32::fromCpp(c_totalRecv))
                                                           totalSent:(::djinni::I32::fromCpp(c_totalSent))];
        }
    }
};

}  // namespace djinni_generated

namespace djinni_generated {

auto IP2pNetworkListener::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return ::djinni::get_objc_proxy<ObjcProxy>(objc);
}

auto IP2pNetworkListener::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return dynamic_cast<ObjcProxy&>(*cpp).djinni_private_get_proxied_objc_object();
}

}  // namespace djinni_generated
