// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from libunity.djinni

#import "DBMonitorListener+Private.h"
#import "DBMonitorListener.h"
#import "DJIMarshal+Private.h"
#import "DJIObjcWrapperCache+Private.h"
#include <stdexcept>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

namespace djinni_generated {

class MonitorListener::ObjcProxy final
: public ::MonitorListener
, private ::djinni::ObjcProxyBase<ObjcType>
{
    friend class ::djinni_generated::MonitorListener;
public:
    using ObjcProxyBase::ObjcProxyBase;
    void onPartialChain(int32_t c_height, int32_t c_probable_height, int32_t c_offset) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() onPartialChain:(::djinni::I32::fromCpp(c_height))
                                                      probableHeight:(::djinni::I32::fromCpp(c_probable_height))
                                                              offset:(::djinni::I32::fromCpp(c_offset))];
        }
    }
    void onPruned(int32_t c_height) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() onPruned:(::djinni::I32::fromCpp(c_height))];
        }
    }
    void onProcessedSPVBlocks(int32_t c_height) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() onProcessedSPVBlocks:(::djinni::I32::fromCpp(c_height))];
        }
    }
};

}  // namespace djinni_generated

namespace djinni_generated {

auto MonitorListener::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return ::djinni::get_objc_proxy<ObjcProxy>(objc);
}

auto MonitorListener::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return dynamic_cast<ObjcProxy&>(*cpp).djinni_private_get_proxied_objc_object();
}

}  // namespace djinni_generated
