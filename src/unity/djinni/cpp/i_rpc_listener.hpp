// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from libunity.djinni

#pragma once

#include <string>

/**
 * Interface to handle result of RPC commands
 * Calls either onSuccess or onError depending on whether command suceedes or fails
 */
#ifdef DJINNI_NODEJS
#include "NJSIRpcListener.hpp" 
#define IRpcListener NJSIRpcListener
#else

class IRpcListener {
public:
    virtual ~IRpcListener() {}

    /**
     * Returns a filtered version of the command with sensitive information like passwords removed
     * Any kind of 'command history' functionality should store this filtered command and not the original command
     */
    virtual void onFilteredCommand(const std::string & filteredCommand) = 0;

    /**
     * Returns the result and a filtered version of the command with sensitive information like passwords removed
     * Any kind of 'command history' functionality should store this filtered command and not the original command
     */
    virtual void onSuccess(const std::string & filteredCommand, const std::string & result) = 0;

    /**
     * Returns an error message which might be a plain string or JSON depending on the type of error
     * Also returns a filtered version of the command with sensitive information like passwords removed
     * Any kind of 'command history' functionality should store this filtered command and not the original command
     */
    virtual void onError(const std::string & filteredCommand, const std::string & errorMessage) = 0;
};
#endif
