language: minimal
dist: trusty
sudo: required
cache:
  ccache: true
  directories:
  - depends/built
  - depends/sdk-sources
  - $HOME/.ccache

env:
  global:
    - MAKEJOBS=-j3
    - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID
    - CCACHE_SIZE=500M
    - CCACHE_TEMPDIR=/tmp/.ccache-temp
    - CCACHE_COMPRESS=1
    - CCACHE_DIR=$HOME/.ccache
    - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out
    - WINEDEBUG=fixme-all
    - DOCKER_PACKAGES="build-essential libtool autotools-dev automake pkg-config bsdmainutils curl git ca-certificates ccache"
matrix:
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env: MATRIX_EVAL="CC=gcc-7 && CXX=g++-7" HOST=x86_64-unknown-linux-gnu PACKAGES="libqrencode-dev libminiupnpc-dev libqwt-qt5-dev libqwt-headers python3-zmq libqt5webkit5-dev qtbase5-dev qttools5-dev-tools protobuf-compiler libdbus-1-dev libharfbuzz-dev libprotobuf-dev" DEP_OPTS="NO_QT=1 NO_UPNP=1 ALLOW_HOST_PACKAGES=1" RUN_TESTS=false GOAL="install" GULDEN_CONFIG='--enable-zmq --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS="-DBYPASS_TEST_REWRITES"'
#    - os: linux
#      addons:
#        apt:
#          sources:
#            - ubuntu-toolchain-r-test
#          packages:
#            - g++-7
#      env: MATRIX_EVAL="CC=gcc-7 && CXX=g++-7" HOST=x86_64-unknown-linux-gnu PACKAGES="libqrencode-dev libminiupnpc-dev python3-zmq protobuf-compiler libdbus-1-dev libharfbuzz-dev libprotobuf-dev" DEP_OPTS="NO_QT=1 NO_WALLET=1 NO_UPNP=1 DEBUG=1 ALLOW_HOST_PACKAGES=1" RUN_TESTS=true GOAL="install" GULDEN_CONFIG='--enable-zmq --disable-wallet --with-gui=no --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS="-DBYPASS_TEST_REWRITES"'
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env: MATRIX_EVAL="CC=gcc-7 && CXX=g++-7" HOST=x86_64-unknown-linux-gnu PACKAGES="libqrencode-dev libminiupnpc-dev python3-zmq protobuf-compiler libdbus-1-dev libharfbuzz-dev libprotobuf-dev" DEP_OPTS="NO_QT=1 NO_UPNP=1 ALLOW_HOST_PACKAGES=1" RUN_TESTS=true GOAL="install" GULDEN_CONFIG='--enable-zmq --disable-wallet --with-gui=no --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS="-DBYPASS_TEST_REWRITES"'
    #Tests only make dist
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env: MATRIX_EVAL="CC=gcc-7 && CXX=g++-7" HOST=x86_64-unknown-linux-gnu PACKAGES="libqrencode-dev libminiupnpc-dev libqwt-qt5-dev libqwt-headers python3-zmq libqt5webkit5-dev qtbase5-dev qttools5-dev-tools protobuf-compiler libdbus-1-dev libharfbuzz-dev libprotobuf-dev" DEP_OPTS="NO_QT=1 NO_UPNP=1 ALLOW_HOST_PACKAGES=1" DIST_ONLY=true GOAL="install" GULDEN_CONFIG='--enable-zmq --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS="-DBYPASS_TEST_REWRITES"'

before_install:
    - eval "${MATRIX_EVAL}"
    - export PATH=$(echo $PATH | tr ':' "\n" | sed '/\/opt\/python/d' | tr "\n" ":" | sed "s|::|:|g")
install:
    - env | grep -E '^(CCACHE_|WINEDEBUG|DISPLAY|BOOST_TEST_RANDOM|CONFIG_SHELL|TRAVIS)' | tee /tmp/env
    - DOCKER_ID=$(docker run $DOCKER_ADMIN -idt --mount type=bind,src=$TRAVIS_BUILD_DIR,dst=$TRAVIS_BUILD_DIR --mount type=bind,src=$CCACHE_DIR,dst=$CCACHE_DIR -w $TRAVIS_BUILD_DIR --env-file /tmp/env ubuntu:18.04)
    - DOCKER_EXEC () { docker exec $DOCKER_ID bash -c "cd $PWD && $*"; }
    - if [ -n "$DPKG_ADD_ARCH" ]; then DOCKER_EXEC dpkg --add-architecture "$DPKG_ADD_ARCH" ; fi
    - travis_retry DOCKER_EXEC apt-get update
    - travis_retry DOCKER_EXEC apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES $DOCKER_PACKAGES
before_script:
    - if [ -z "$NO_DEPENDS" ]; then DOCKER_EXEC CONFIG_SHELL= make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS; fi
    # Start xvfb if needed, as documented at https://docs.travis-ci.com/user/gui-and-headless-browsers/#Using-xvfb-to-Run-Tests-That-Require-a-GUI
    - if [ "$NEED_XVFB" = 1 ]; then DOCKER_EXEC /sbin/start-stop-daemon --start --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac; fi
script:
    - export TRAVIS_COMMIT_LOG=`git log --format=fuller -1`
    - OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST
    - GULDEN_CONFIG_ALL="--enable-werror --disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib"
    - if [ -z "$NO_DEPENDS" ]; then DOCKER_EXEC ccache --max-size=$CCACHE_SIZE; fi
    - test -n "$CONFIG_SHELL" && DOCKER_EXEC "$CONFIG_SHELL" -c "./autogen.sh" || DOCKER_EXEC ./autogen.sh
    - mkdir build && cd build
    - DOCKER_EXEC "echo 'prefix=/usr' | tee /usr/share/pkgconfig/Qt5Qwt.pc"
    - DOCKER_EXEC "echo 'exec_prefix=/usr' | tee -a /usr/share/pkgconfig/Qt5Qwt.pc"
    - DOCKER_EXEC "echo 'libdir=/usr/lib64' | tee -a /usr/share/pkgconfig/Qt5Qwt.pc"
    - DOCKER_EXEC "echo 'includedir=/usr/include/qwt' | tee -a /usr/share/pkgconfig/Qt5Qwt.pc"
    - DOCKER_EXEC "echo 'Name:Qwt' | tee -a /usr/share/pkgconfig/Qt5Qwt.pc"
    - DOCKER_EXEC "echo 'Description:Qt Widgets for Technical Applications' | tee -a /usr/share/pkgconfig/Qt5Qwt.pc"
    - DOCKER_EXEC "echo 'Version:6.1.3' | tee -a /usr/share/pkgconfig/Qt5Qwt.pc"
    - DOCKER_EXEC "echo 'Libs:-lqwt-qt5' | tee -a /usr/share/pkgconfig/Qt5Qwt.pc"
    - DOCKER_EXEC "echo 'Cflags:-I/usr/include/qwt' | tee -a /usr/share/pkgconfig/Qt5Qwt.pc"
    - DOCKER_EXEC ../configure --cache-file=config.cache $GULDEN_CONFIG_ALL $GULDEN_CONFIG || ( cat config.log && false)
    - if [ "DIST_ONLY" = "true" ]; then DOCKER_EXEC make dist; fi
    - if [ "DIST_ONLY" != "true" ]; then DOCKER_EXEC make $MAKEJOBS; fi
#    - if [ "$RUN_TESTS" = "true" ]; then travis_wait 60 DOCKER_EXEC ./src/test/test_gulden; fi
after_script:
    - echo $TRAVIS_COMMIT_RANGE
    - echo $TRAVIS_COMMIT_LOG

notifications:
  slack:
    secure: iNEHGC+a1uC0bGNKDH85XuSwk18Jyqb8t02dosNcZd46L1eZyUrcL/AoQBVw/r8Ay+dOUcTY6arjKrkobPjvXGpamrJo0ejI6vZlfe8t1nR+P7feYLDhYeJQ4yb6ZV7uKzOP+ZocoEoTKttsHkoWKGGNuNzHcPcjhzLkYmY3MHfGmIQDVcU6DAGGTw6SQB1FkMbOWpgpqXndidEpX6N8pdZ3gCG3EFLKI/xQAVlyvzEmQOc4uP4vLMVhCQVc03MgnQIm5DpbsPdMMp4h24ysstTIFk6zO8qwjqzeePr4bRWTYRdaVxIHvd269bo7rCMn7p+Apc+xHnDIaCHJbzrI7HN8iJ4Pe9W4MTOR/GUNesfQhnrkWndSYRfObTzpfZHOgdv+K9dQ+A+kn3CUEQfLXFtwtmafgpVzQ0PeU3mLqXJt1zzYVoxCSqyO/dpye9Ezr5cPged29a35lL80ChIywlL83EkbcXpctoA9AHu4M44h1gTCG5oleulsuQjEPnNZYdEKuY2uAmB0dszzbgu1R+BBVmnBQSW0LT1AwJGD/30SihQZhY+vXrJOBBTrQl6mrA7iX5kAe2o5kGCkVuKj/o8P9ia5LF88PsWibYm4cB+wt07DxVK/rjZDw/yi0+G59D6HrF0B2i8Jg7yJOQ2JyC3Au/1d+17tHmxqAdp6xPE=
